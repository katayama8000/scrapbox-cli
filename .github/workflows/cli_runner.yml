name: CLI Runner

on:
  workflow_call:
    inputs:
      cli_command:
        required: true
        type: string
      schedule_title:
        required: true
        type: string
      color:
        required: true
        type: string

jobs:
  run-cli:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: "24"
          cache: yarn

      - name: Get Playwright Version
        id: playwright-version
        run: |
          VERSION_QUOTED=$(grep -o '"playwright": *"[^"]*"' package.json | head -1 | sed 's/.*: *"\([^"]*\)"/\1/')
          VERSION=$(echo $VERSION_QUOTED | tr -d '"')
          echo "PLAYWRIGHT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Restore Playwright Cache
        uses: actions/cache/restore@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run the CLI
        env:
          SCRAPBOX_SID: ${{ secrets.SCRAPBOX_SID }}
        run: |
          # if cache is not hit (browser does not exist), install it
          if [ "${{ steps.playwright-cache.outputs.cache-hit }}" != "true" ]; then
            npx playwright install --with-deps
          fi
          # run the command
          yarn ${{ inputs.cli_command }}

      - name: Save Playwright Cache
        uses: actions/cache/save@v4
        # if cache is not hit (browser does not exist), save a new cache
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: ${{ inputs.schedule_title }}
          description: "${{ inputs.schedule_title }} has been executed."
          color: ${{ inputs.color }}
          url: "https://scrapbox.io/katayama8000/"
          username: "Scrapbox Bot"

      - name: Add Issue to Backlog
        if: failure()
        uses: katayama8000/backlog-issue-creator@0.3.2
        with:
          backlog_domain: "tatsufumi.backlog.com"
          api_key: ${{ secrets.BACKLOG_API_KEY }}
          project_id: "665456"
          issue_type_id: "3529948"
          summary: "${{ inputs.schedule_title }} has failed"
          description: "${{ inputs.schedule_title }} has been executed and failed. Please check the Scrapbox page for details: https://scrapbox.io/katayama8000/"
          priority_id: "3"
